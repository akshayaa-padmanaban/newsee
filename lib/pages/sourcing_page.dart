import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:newsee/AppData/app_forms.dart';
import 'package:newsee/AppData/app_lov_constants.dart';
import 'package:newsee/feature/savelead/presentation/bloc/savelead_sourcing_bloc.dart';
import 'package:newsee/widgets/custom_text_field.dart';
import 'package:newsee/widgets/drop_down.dart';
import 'package:newsee/widgets/integer_text_field.dart';
import 'package:newsee/widgets/searchable_drop_down.dart';
import 'package:reactive_forms/reactive_forms.dart';

class SourcingPage extends StatelessWidget {
  final String title;

  SourcingPage(String s, {required this.title, super.key});

  final form = AppForms.SOURCING_DETAILS_FORM;

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create:
          (context) => SaveleadBloc(
            LeadSourcingState(status: null, sourcingdetails: null),
          ),
      child: Scaffold(
        appBar: AppBar(title: Text("Sourcing Details")),
        body: BlocListener<SaveleadBloc, LeadSourcingState>(
          bloc: SaveleadBloc(
            LeadSourcingState(status: LeadStatus.init, sourcingdetails: null),
          ),
          listener: (context, state) {
            switch (state.status) {
              case LeadStatus.init:
                print('Lead Init Status.....');
              case LeadStatus.loading:
                print('Lead Init Loading.....');

              case LeadStatus.success:
                print('Lead Init Success.....');
                print(state.sourcingdetails);
              case LeadStatus.failure:
                print('Lead Init Failure.....');
              default:
                print('default case....');
            }
          },
          child: BlocBuilder<SaveleadBloc, LeadSourcingState>(
            builder: (context, state) {
              state.status == LeadStatus.success
                  ? form.controls['leadid']?.patchValue(
                    state.sourcingdetails?.leadID,
                  )
                  : print('Failure');
              return ReactiveForm(
                formGroup: form,
                child: SafeArea(
                  child: SingleChildScrollView(
                    child: Column(
                      children: [
                        Dropdown(
                          controlName: 'businessdescription',
                          label: 'Business Description',
                          items: ['MSME', 'Retail'],
                        ),
                        Dropdown(
                          controlName: 'sourcingchannel',
                          label: 'Sourcing Channel',
                          items: [
                            'Direct Call',
                            'Lead Management System',
                            'Online',
                            'Partner',
                            'Website',
                          ],
                        ),
                        IntegerTextField(
                          controlName: 'sourcingid',
                          label: 'Sourcing ID',
                          mantatory: true,
                        ),
                        CustomTextField(
                          controlName: 'sourcingname',
                          label: 'Sourcing Name',
                          mantatory: true,
                        ),
                        SearchableDropdown(
                          controlName: 'preferredbranch',
                          label: 'Preferred Branch',
                          items: AppLovConstants.branches,
                          selItem: () => {},
                        ),
                        IntegerTextField(
                          controlName: 'branchcode',
                          label: 'Branch Code',
                          mantatory: true,
                        ),
                        IntegerTextField(
                          controlName: 'leadgeneratedby',
                          label: 'Lead Generated By',
                          mantatory: true,
                        ),
                        IntegerTextField(
                          controlName: 'leadid',
                          label: 'Lead ID',
                          mantatory: true,
                        ),
                        CustomTextField(
                          controlName: 'customername',
                          label: 'Customer Name',
                          mantatory: true,
                        ),
                        Padding(
                          padding: const EdgeInsets.all(12.0),
                          child: ReactiveTextField<String>(
                            formControlName: 'dateofbirth',
                            validationMessages: {
                              ValidationMessage.required:
                                  (error) => 'Date of Birth is required',
                            },
                            readOnly: true,
                            decoration: InputDecoration(
                              labelText: 'Date Of Birth',
                              suffixIcon: Icon(Icons.calendar_today),
                            ),
                            onTap: (control) async {
                              final DateTime? pickedDate = await showDatePicker(
                                context: context,
                                initialDate: DateTime.now().subtract(
                                  Duration(days: 365 * 18),
                                ),
                                firstDate: DateTime(1900),
                                lastDate: DateTime.now(),
                              );
                              if (pickedDate != null) {
                                final formatted =
                                    "${pickedDate.day.toString().padLeft(2, '0')}/"
                                    "${pickedDate.month.toString().padLeft(2, '0')}/"
                                    "${pickedDate.year}";
                                form.control('dateofbirth').value = formatted;
                              }
                            },
                          ),
                        ),
                        IntegerTextField(
                          controlName: 'mobilenumber',
                          label: 'Mobile Number',
                          mantatory: true,
                          maxlength: 10,
                        ),
                        SearchableDropdown(
                          controlName: 'productinterest',
                          label: 'Product Interest',
                          items: AppLovConstants.products,
                          selItem: () => {},
                        ),
                        SizedBox(height: 20),
                        Center(
                          child: ElevatedButton(
                            onPressed: () {
                              if (form.valid) {
                                //
                                context.read<SaveleadBloc>().add(
                                  SaveleadSourcingSave(),
                                );

                                print(state.toString());
                                // final tabController = DefaultTabController.of(
                                //   context,
                                // );
                                // if (tabController.index <
                                //     tabController.length - 1) {
                                //   tabController.animateTo(
                                //     tabController.index + 1,
                                //   );
                                // }
                              } else {
                                form.markAllAsTouched();
                              }
                            },
                            child: Text('Next'),
                          ),
                        ),
                        SizedBox(height: 20),
                      ],
                    ),
                  ),
                ),
              );
            },
          ),
        ),
      ),
    );
  }
}
